/*
 * Copyright (C) 2011, British Broadcasting Corporation
 * All Rights Reserved.
 *
 * Author: Philip de Nier
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *     * Redistributions of source code must retain the above copyright notice,
 *       this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of the British Broadcasting Corporation nor the names
 *       of its contributors may be used to endorse or promote products derived
 *       from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/* Note: defines are undefined at the end of the file, unless KEEP_DATA_MODEL_DEFS defined */


#if !defined (MXF_BASIC_TYPE_DEF)
#define MXF_BASIC_TYPE_DEF(typeId, name, size)
#endif
#if !defined (MXF_ARRAY_TYPE_DEF)
#define MXF_ARRAY_TYPE_DEF(typeId, name, elementTypeId, fixedSize)
#endif
#if !defined (MXF_COMPOUND_TYPE_DEF)
#define MXF_COMPOUND_TYPE_DEF(typeId, name)
#endif
#if !defined (MXF_COMPOUND_TYPE_MEMBER)
#define MXF_COMPOUND_TYPE_MEMBER(memberName, memberTypeId)
#endif
#if !defined (MXF_INTERPRETED_TYPE_DEF)
#define MXF_INTERPRETED_TYPE_DEF(typeId, name, interpretedTypeId, fixedSize)
#endif

#if !defined (MXF_LABEL)
#define MXF_LABEL(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15)
#endif
#if !defined (MXF_SET_DEFINITION)
#define MXF_SET_DEFINITION(parentName, name, label)
#endif
#if !defined (MXF_ITEM_DEFINITION)
#define MXF_ITEM_DEFINITION(setName, name, label, localTag, typeId, isRequired)
#endif



MXF_SET_DEFINITION(DMFramework, UKDPPFramework,
    MXF_LABEL(0x06, 0x0e, 0x2b, 0x34, 0x02, 0x53, 0x01, 0x01, 0x0d, 0x0c, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00)
);

    MXF_ITEM_DEFINITION(UKDPPFramework, UKDPPProductionNumber,
        MXF_LABEL(0x06, 0x0e, 0x2b, 0x34, 0x01, 0x01, 0x01, 0x01, 0x0d, 0x0c, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00),
        0x0000,
        MXF_UTF16STRING_TYPE,
        1
    );

    MXF_ITEM_DEFINITION(UKDPPFramework, UKDPPSynopsis,
        MXF_LABEL(0x06, 0x0e, 0x2b, 0x34, 0x01, 0x01, 0x01, 0x01, 0x0d, 0x0c, 0x01, 0x01, 0x01, 0x01, 0x02, 0x00),
        0x0000,
        MXF_UTF16STRING_TYPE,
        1
    );

    MXF_ITEM_DEFINITION(UKDPPFramework, UKDPPOriginator,
        MXF_LABEL(0x06, 0x0e, 0x2b, 0x34, 0x01, 0x01, 0x01, 0x01, 0x0d, 0x0c, 0x01, 0x01, 0x01, 0x01, 0x03, 0x00),
        0x0000,
        MXF_UTF16STRING_TYPE,
        1
    );

    MXF_ITEM_DEFINITION(UKDPPFramework, UKDPPCopyrightYear,
        MXF_LABEL(0x06, 0x0e, 0x2b, 0x34, 0x01, 0x01, 0x01, 0x01, 0x0d, 0x0c, 0x01, 0x01, 0x01, 0x01, 0x04, 0x00),
        0x0000,
        MXF_UINT16_TYPE,
        1
    );

    MXF_ITEM_DEFINITION(UKDPPFramework, UKDPPOtherIdentifier,
        MXF_LABEL(0x06, 0x0e, 0x2b, 0x34, 0x01, 0x01, 0x01, 0x01, 0x0d, 0x0c, 0x01, 0x01, 0x01, 0x01, 0x05, 0x00),
        0x0000,
        MXF_UTF16STRING_TYPE,
        0
    );

    MXF_ITEM_DEFINITION(UKDPPFramework, UKDPPOtherIdentifierType,
        MXF_LABEL(0x06, 0x0e, 0x2b, 0x34, 0x01, 0x01, 0x01, 0x01, 0x0d, 0x0c, 0x01, 0x01, 0x01, 0x01, 0x06, 0x00),
        0x0000,
        MXF_UTF16STRING_TYPE,
        0
    );

    MXF_ITEM_DEFINITION(UKDPPFramework, UKDPPGenre,
        MXF_LABEL(0x06, 0x0e, 0x2b, 0x34, 0x01, 0x01, 0x01, 0x01, 0x0d, 0x0c, 0x01, 0x01, 0x01, 0x01, 0x07, 0x00),
        0x0000,
        MXF_UTF16STRING_TYPE,
        0
    );

    MXF_ITEM_DEFINITION(UKDPPFramework, UKDPPDistributor,
        MXF_LABEL(0x06, 0x0e, 0x2b, 0x34, 0x01, 0x01, 0x01, 0x01, 0x0d, 0x0c, 0x01, 0x01, 0x01, 0x01, 0x08, 0x00),
        0x0000,
        MXF_UTF16STRING_TYPE,
        0
    );

    MXF_ITEM_DEFINITION(UKDPPFramework, UKDPPPictureRatio,
        MXF_LABEL(0x06, 0x0e, 0x2b, 0x34, 0x01, 0x01, 0x01, 0x01, 0x0d, 0x0c, 0x01, 0x01, 0x01, 0x01, 0x09, 0x00),
        0x0000,
        MXF_RATIONAL_TYPE,
        0
    );

    MXF_ITEM_DEFINITION(UKDPPFramework, UKDPP3D,
        MXF_LABEL(0x06, 0x0e, 0x2b, 0x34, 0x01, 0x01, 0x01, 0x01, 0x0d, 0x0c, 0x01, 0x01, 0x01, 0x01, 0x0a, 0x00),
        0x0000,
        MXF_BOOLEAN_TYPE,
        1
    );

    MXF_ITEM_DEFINITION(UKDPPFramework, UKDPP3DType,
        MXF_LABEL(0x06, 0x0e, 0x2b, 0x34, 0x01, 0x01, 0x01, 0x01, 0x0d, 0x0c, 0x01, 0x01, 0x01, 0x01, 0x0b, 0x00),
        0x0000,
        MXF_UINT8_TYPE,
        0
    );

    MXF_ITEM_DEFINITION(UKDPPFramework, UKDPPProductPlacement,
        MXF_LABEL(0x06, 0x0e, 0x2b, 0x34, 0x01, 0x01, 0x01, 0x01, 0x0d, 0x0c, 0x01, 0x01, 0x01, 0x01, 0x0c, 0x00),
        0x0000,
        MXF_BOOLEAN_TYPE,
        0
    );

    MXF_ITEM_DEFINITION(UKDPPFramework, UKDPPPSEPass,
        MXF_LABEL(0x06, 0x0e, 0x2b, 0x34, 0x01, 0x01, 0x01, 0x01, 0x0d, 0x0c, 0x01, 0x01, 0x01, 0x01, 0x0d, 0x00),
        0x0000,
        MXF_UINT8_TYPE,
        1
    );

    MXF_ITEM_DEFINITION(UKDPPFramework, UKDPPPSEManufacturer,
        MXF_LABEL(0x06, 0x0e, 0x2b, 0x34, 0x01, 0x01, 0x01, 0x01, 0x0d, 0x0c, 0x01, 0x01, 0x01, 0x01, 0x0e, 0x00),
        0x0000,
        MXF_UTF16STRING_TYPE,
        0
    );

    MXF_ITEM_DEFINITION(UKDPPFramework, UKDPPPSEVersion,
        MXF_LABEL(0x06, 0x0e, 0x2b, 0x34, 0x01, 0x01, 0x01, 0x01, 0x0d, 0x0c, 0x01, 0x01, 0x01, 0x01, 0x0f, 0x00),
        0x0000,
        MXF_UTF16STRING_TYPE,
        0
    );

    MXF_ITEM_DEFINITION(UKDPPFramework, UKDPPVideoComments,
        MXF_LABEL(0x06, 0x0e, 0x2b, 0x34, 0x01, 0x01, 0x01, 0x01, 0x0d, 0x0c, 0x01, 0x01, 0x01, 0x01, 0x10, 0x00),
        0x0000,
        MXF_UTF16STRING_TYPE,
        0
    );

    MXF_ITEM_DEFINITION(UKDPPFramework, UKDPPSecondaryAudioLanguage,
        MXF_LABEL(0x06, 0x0e, 0x2b, 0x34, 0x01, 0x01, 0x01, 0x01, 0x0d, 0x0c, 0x01, 0x01, 0x01, 0x01, 0x11, 0x00),
        0x0000,
        MXF_UTF16STRING_TYPE,
        1
    );

    MXF_ITEM_DEFINITION(UKDPPFramework, UKDPPTertiaryAudioLanguage,
        MXF_LABEL(0x06, 0x0e, 0x2b, 0x34, 0x01, 0x01, 0x01, 0x01, 0x0d, 0x0c, 0x01, 0x01, 0x01, 0x01, 0x12, 0x00),
        0x0000,
        MXF_UTF16STRING_TYPE,
        1
    );

    MXF_ITEM_DEFINITION(UKDPPFramework, UKDPPAudioLoudnessStandard,
        MXF_LABEL(0x06, 0x0e, 0x2b, 0x34, 0x01, 0x01, 0x01, 0x01, 0x0d, 0x0c, 0x01, 0x01, 0x01, 0x01, 0x13, 0x00),
        0x0000,
        MXF_UINT8_TYPE,
        1
    );

    MXF_ITEM_DEFINITION(UKDPPFramework, UKDPPAudioComments,
        MXF_LABEL(0x06, 0x0e, 0x2b, 0x34, 0x01, 0x01, 0x01, 0x01, 0x0d, 0x0c, 0x01, 0x01, 0x01, 0x01, 0x14, 0x00),
        0x0000,
        MXF_UTF16STRING_TYPE,
        0
    );

    MXF_ITEM_DEFINITION(UKDPPFramework, UKDPPLineUpStart,
        MXF_LABEL(0x06, 0x0e, 0x2b, 0x34, 0x01, 0x01, 0x01, 0x01, 0x0d, 0x0c, 0x01, 0x01, 0x01, 0x01, 0x15, 0x00),
        0x0000,
        MXF_POSITION_TYPE,
        1
    );

    MXF_ITEM_DEFINITION(UKDPPFramework, UKDPPIdentClockStart,
        MXF_LABEL(0x06, 0x0e, 0x2b, 0x34, 0x01, 0x01, 0x01, 0x01, 0x0d, 0x0c, 0x01, 0x01, 0x01, 0x01, 0x16, 0x00),
        0x0000,
        MXF_POSITION_TYPE,
        1
    );

    MXF_ITEM_DEFINITION(UKDPPFramework, UKDPPTotalNumberOfParts,
        MXF_LABEL(0x06, 0x0e, 0x2b, 0x34, 0x01, 0x01, 0x01, 0x01, 0x0d, 0x0c, 0x01, 0x01, 0x01, 0x01, 0x17, 0x00),
        0x0000,
        MXF_UINT16_TYPE,
        1
    );

    MXF_ITEM_DEFINITION(UKDPPFramework, UKDPPTotalProgrammeDuration,
        MXF_LABEL(0x06, 0x0e, 0x2b, 0x34, 0x01, 0x01, 0x01, 0x01, 0x0d, 0x0c, 0x01, 0x01, 0x01, 0x01, 0x18, 0x00),
        0x0000,
        MXF_LENGTH_TYPE,
        1
    );

    MXF_ITEM_DEFINITION(UKDPPFramework, UKDPPAudioDescriptionPresent,
        MXF_LABEL(0x06, 0x0e, 0x2b, 0x34, 0x01, 0x01, 0x01, 0x01, 0x0d, 0x0c, 0x01, 0x01, 0x01, 0x01, 0x19, 0x00),
        0x0000,
        MXF_BOOLEAN_TYPE,
        1
    );

    MXF_ITEM_DEFINITION(UKDPPFramework, UKDPPAudioDescriptionType,
        MXF_LABEL(0x06, 0x0e, 0x2b, 0x34, 0x01, 0x01, 0x01, 0x01, 0x0d, 0x0c, 0x01, 0x01, 0x01, 0x01, 0x1a, 0x00),
        0x0000,
        MXF_UINT8_TYPE,
        0
    );

    MXF_ITEM_DEFINITION(UKDPPFramework, UKDPPOpenCaptionsPresent,
        MXF_LABEL(0x06, 0x0e, 0x2b, 0x34, 0x01, 0x01, 0x01, 0x01, 0x0d, 0x0c, 0x01, 0x01, 0x01, 0x01, 0x1b, 0x00),
        0x0000,
        MXF_BOOLEAN_TYPE,
        1
    );

    MXF_ITEM_DEFINITION(UKDPPFramework, UKDPPOpenCaptionsType,
        MXF_LABEL(0x06, 0x0e, 0x2b, 0x34, 0x01, 0x01, 0x01, 0x01, 0x0d, 0x0c, 0x01, 0x01, 0x01, 0x01, 0x1c, 0x00),
        0x0000,
        MXF_UINT8_TYPE,
        0
    );

    MXF_ITEM_DEFINITION(UKDPPFramework, UKDPPOpenCaptionsLanguage,
        MXF_LABEL(0x06, 0x0e, 0x2b, 0x34, 0x01, 0x01, 0x01, 0x01, 0x0d, 0x0c, 0x01, 0x01, 0x01, 0x01, 0x1d, 0x00),
        0x0000,
        MXF_UTF16STRING_TYPE,
        0
    );

    MXF_ITEM_DEFINITION(UKDPPFramework, UKDPPSigningPresent,
        MXF_LABEL(0x06, 0x0e, 0x2b, 0x34, 0x01, 0x01, 0x01, 0x01, 0x0d, 0x0c, 0x01, 0x01, 0x01, 0x01, 0x1e, 0x00),
        0x0000,
        MXF_UINT8_TYPE,
        1
    );

    MXF_ITEM_DEFINITION(UKDPPFramework, UKDPPSignLanguage,
        MXF_LABEL(0x06, 0x0e, 0x2b, 0x34, 0x01, 0x01, 0x01, 0x01, 0x0d, 0x0c, 0x01, 0x01, 0x01, 0x01, 0x1f, 0x00),
        0x0000,
        MXF_UINT8_TYPE,
        0
    );

    MXF_ITEM_DEFINITION(UKDPPFramework, UKDPPCompletionDate,
        MXF_LABEL(0x06, 0x0e, 0x2b, 0x34, 0x01, 0x01, 0x01, 0x01, 0x0d, 0x0c, 0x01, 0x01, 0x01, 0x01, 0x20, 0x00),
        0x0000,
        MXF_TIMESTAMP_TYPE,
        1
    );

    MXF_ITEM_DEFINITION(UKDPPFramework, UKDPPTextlessElementsExist,
        MXF_LABEL(0x06, 0x0e, 0x2b, 0x34, 0x01, 0x01, 0x01, 0x01, 0x0d, 0x0c, 0x01, 0x01, 0x01, 0x01, 0x21, 0x00),
        0x0000,
        MXF_BOOLEAN_TYPE,
        0
    );

    MXF_ITEM_DEFINITION(UKDPPFramework, UKDPPProgrammeHasText,
        MXF_LABEL(0x06, 0x0e, 0x2b, 0x34, 0x01, 0x01, 0x01, 0x01, 0x0d, 0x0c, 0x01, 0x01, 0x01, 0x01, 0x22, 0x00),
        0x0000,
        MXF_BOOLEAN_TYPE,
        0
    );

    MXF_ITEM_DEFINITION(UKDPPFramework, UKDPPProgrammeTextLanguage,
        MXF_LABEL(0x06, 0x0e, 0x2b, 0x34, 0x01, 0x01, 0x01, 0x01, 0x0d, 0x0c, 0x01, 0x01, 0x01, 0x01, 0x23, 0x00),
        0x0000,
        MXF_UTF16STRING_TYPE,
        0
    );

    MXF_ITEM_DEFINITION(UKDPPFramework, UKDPPContactEmail,
        MXF_LABEL(0x06, 0x0e, 0x2b, 0x34, 0x01, 0x01, 0x01, 0x01, 0x0d, 0x0c, 0x01, 0x01, 0x01, 0x01, 0x24, 0x00),
        0x0000,
        MXF_UTF16STRING_TYPE,
        1
    );

    MXF_ITEM_DEFINITION(UKDPPFramework, UKDPPContactTelephoneNumber,
        MXF_LABEL(0x06, 0x0e, 0x2b, 0x34, 0x01, 0x01, 0x01, 0x01, 0x0d, 0x0c, 0x01, 0x01, 0x01, 0x01, 0x25, 0x00),
        0x0000,
        MXF_UTF16STRING_TYPE,
        1
    );



#if !defined(KEEP_DATA_MODEL_DEFS)
#undef MXF_BASIC_TYPE_DEF
#undef MXF_ARRAY_TYPE_DEF
#undef MXF_COMPOUND_TYPE_DEF
#undef MXF_COMPOUND_TYPE_MEMBER
#undef MXF_INTERPRETED_TYPE_DEF
#undef MXF_LABEL
#undef MXF_SET_DEFINITION
#undef MXF_ITEM_DEFINITION
#endif

